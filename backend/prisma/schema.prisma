generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  pin       String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  otps      Otp[]
}

model Otp {
  id            Int      @id @default(autoincrement())
  email         String
  otp           String
  otpExpiration DateTime
  createdAt     DateTime @default(now())
  user          User?    @relation(fields: [userId], references: [id])
  userId        Int?
}

model InventoryItem {
  id          Int       @id @default(autoincrement())
  name        String
  note        String
  quantity    Float
  unitPrice   Float
  selectUnit  String
  unitSize    Float
  total       Float
  dateCreated DateTime  @default(now())
  lastUpdated DateTime? @updatedAt
}

model AssignedItem {
  id         Int    @id @default(autoincrement())

  // Snapshot of inventory Item
  name       String
  note       String
  quantity   Float
  unitPrice  Float
  selectUnit String
  unitSize   Float
  total      Float

  // Assignment metadata
  fleet_id    Int
  fleet       Fleet     @relation(fields: [fleet_id], references: [id])
  boat_id     Int
  boat        Boat      @relation(fields: [boat_id], references: [id])
  archived    Boolean   @default(false)
  outDate     DateTime  @default(now())
  lastUpdated DateTime? @updatedAt
}

model Fleet {
  id           Int            @id @default(autoincrement())
  fleet_name   String
  AssignedItem AssignedItem[]
  Boat         Boat[]
}

model Boat {
  id           Int            @id @default(autoincrement())
  fleet_id     Int
  fleet        Fleet          @relation(fields: [fleet_id], references: [id])
  boat_name    String
  AssignedItem AssignedItem[]
}


